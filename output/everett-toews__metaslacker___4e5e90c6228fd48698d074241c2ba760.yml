data:
  extends:
    file: docker-compose-common.yml
    service: data

db:
  extends:
    file: docker-compose-common.yml
    service: db
  ports:
    # Publish the port so it's visible on the host, you can access the db directly
    - "3306:3306"
  environment:
    # Environment variables to configure MySQL on startup.
    # We don't care about commiting these creds to GitHub because they're only
    # for our local development environment
    - MYSQL_ROOT_PASSWORD=my-root-password-dev
    - MYSQL_DATABASE=metaslacker-dev
    - MYSQL_USER=metaslacker-admin
    - MYSQL_PASSWORD=my-metaslacker-admin-password-dev
  volumes_from:
    # Mount the volumes from the data container to store our MySQL files
    - data

api:
  extends:
    file: docker-compose-common.yml
    service: api
  ports:
    # Publish the port so it's visible on the host, you can access the api directly
    - "8000:8000"
  links:
    # Link to the db service to store state
    - db:db
  volumes:
    # Mount the api dir in the container as /src so our changes to the api code
    # are also changed in the container
    - ./api:/src
  command: gunicorn --reload api:api --bind 0.0.0.0:8000
    # Run Gunicorn to serve api requests and reload on change so we can see our
    # changes to the api code


web:
  extends:
    file: docker-compose-common.yml
    service: web
  ports:
    # Publish the port so it's visible on the host
    - "80:80"
  links:
    # Link to the api to serve requests
    - api:api
