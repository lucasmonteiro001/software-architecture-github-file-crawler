version: '2'
services:
  interlock:
    image: ehazlett/interlock:1.1.1
    container_name: interlock
    command: run
    ports:
      - 8080
    environment:
      INTERLOCK_CONFIG: |
        ListenAddr = ":8080"
        DockerURL = "tcp://192.168.0.101:3376"
        TLSCACert = "/etc/docker/ca.pem"
        TLSCert = "/etc/docker/server.pem"
        TLSKey = "/etc/docker/server-key.pem"
        [[Extensions]]
        Name = "nginx"
        ConfigPath = "/etc/nginx/nginx.conf"
        PidPath = "/var/run/nginx.pid"
        TemplatePath = ""
        MaxConn = 1024
      constraint:stage: =stable
    volumes:
      - /etc/docker:/etc/docker:ro
    network_mode: bridge
    restart: always
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80:80
    labels:
      - interlock.ext.name=nginx
    environment:
      - constraint:node==home
      - constraint:stage==stable
    network_mode: bridge
    restart: always
  redis:
    image: redis
    command: --appendonly yes
    volumes:
      - redis:/data
    environment:
      - constraint:node==home
      - constraint:stage==stable
    restart: always
  mshard:
    image: ermaker/mshard_server
    hostname: mshard.d.ermaker.tk
    env_file: .env.mshard
    environment:
      - REDIS_URL=redis://redis
      - constraint:stage==stable
    ports:
      - 80
    restart: always
  iptime_rebooter:
    image: ermaker/iptime_rebooter
    env_file: .env.iptime_rebooter
    command: sh -c 'yes "bundle exec rake reboot; sleep 43200" | /bin/bash'
    environment:
      - constraint:stage==stable
    restart: always
volumes:
  redis: {}
