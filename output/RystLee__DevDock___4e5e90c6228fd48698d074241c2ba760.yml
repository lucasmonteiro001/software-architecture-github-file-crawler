version: '2'

services:

### Application Code Container ######################

    applications:
        image: tianon/true
        volumes:
            - ${APPLICATION}:/var/www

### Workspace Utilities Container ###########################

    workspace:
        build:
            context: ./workspace
            args:
                - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
                - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
                - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
                - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
                - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
                - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
                - PUID=${WORKSPACE_PUID}
                - PGID=${WORKSPACE_PGID}
                - NODE_VERSION=${WORKSPACE_NODE_VERSION}
                - YARN_VERSION=${WORKSPACE_YARN_VERSION}
                - TZ=${WORKSPACE_TIMEZONE}
            dockerfile: "Dockerfile-${PHP_VERSION}"
        volumes_from:
            - applications
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        tty: true

### PHP-FPM Container #######################################

    php-fpm:
        build:
            context: ./php-fpm
            args:
                - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
                - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
                - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
                - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
                - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
                - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
            dockerfile: Dockerfile-${PHP_VERSION}
        volumes_from:
            - applications
        expose:
            - "9000"
        links:
            - workspace
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        environment:
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}

### Nginx Server Container ##################################

    nginx:
        build:
            context: ./nginx
            args:
                - PHP_UPSTREAM=php-fpm
        volumes_from:
            - applications
        volumes:
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        links:
            - php-fpm

### MySQL Container #########################################

    mysql:
        build:
            context: ./mysql
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - mysql:/var/lib/mysql
        ports:
            - "${MYSQL_PORT}:3306"


### Redis Container #########################################

    redis:
        build: ./redis
        volumes:
            - redis:/data
        ports:
            - "6379:6379"

### Memcached Container #####################################

    memcached:
        build: ./memcached
        volumes:
            - memcached:/var/lib/memcached
        ports:
            - "${MEMCACHED_HOST_PORT}:11211"
        links:
            - php-fpm

### Elasticsearch Container #######################################

    elasticsearch:
        build: ./elasticsearch
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
            - elasticsearch-plugins:/usr/share/elasticsearch/data
        ports:
            - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
            - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
        depends_on:
            - php-fpm

### phpMyAdmin Container ##################################

    phpmyadmin:
        build: ./phpmyadmin
        environment:
            PMA_ARBITRARY: 1
            MYSQL_USER: homestead
            MYSQL_PASSWORD: secret
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "${PMA_PORT}:80"
        depends_on:
            - "${PMA_DB_ENGINE}"




### Volumes Setup ###########################################

volumes:
    mysql:
        driver: "local"
    memcached:
        driver: "local"
    redis:
        driver: "local"
    phpmyadmin:
        driver: "local"
    elasticsearch-data:
        driver: "local"
    elasticsearch-plugins:
        driver: "local"

