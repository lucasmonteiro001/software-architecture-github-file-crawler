version: "2"

services:

  deploy-dev:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
    working_dir: /code
    environment:
      - "AWS_ACCESS_KEY_ID=${TEST_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${TEST_AWS_SECRET_ACCESS_KEY}"
      - "SERVICE_NAME=${TEST_SERVICE_NAME}"
      - "KEBOOLA_STACK=${TEST_SERVICE_NAME}"
      - "REGION=${TEST_REGION}"
      - "STAGE=${TEST_STAGE}"
      - "SES_EMAIL_FROM=${TEST_SES_EMAIL_FROM}"
      - "RDS_INSTANCE_CLASS=${TEST_RDS_INSTANCE_CLASS}"
      - "RDS_DATABASE=${TEST_RDS_DATABASE}"
      - "RDS_USER=${TEST_RDS_USER}"
      - "RDS_PASSWORD=${TEST_RDS_PASSWORD}"
      - "RDS_HOST=${TEST_RDS_HOST}"
      - "RDS_PORT=${TEST_RDS_PORT}"
      - "RDS_SSL=${TEST_RDS_SSL}"
      - "RDS_SECURITY_GROUP=${TEST_RDS_SECURITY_GROUP}"
      - "S3_BUCKET=${TEST_S3_BUCKET}"
      - "LOG_HOST=${TEST_LOG_HOST}"
      - "LOG_PORT=${TEST_LOG_PORT}"
      - "SLACK_HOOK_URL=${TEST_SLACK_HOOK_URL}"
      - "ACCOUNT_ID=${TEST_ACCOUNT_ID}"
      - "VPC_CF_STACK_ID=${TEST_VPC_CF_STACK_ID}"
      - "VPC_SECURITY_GROUP=${TEST_VPC_SECURITY_GROUP}"
      - "VPC_SUBNET1=${TEST_VPC_SUBNET1}"
      - "VPC_SUBNET2=${TEST_VPC_SUBNET2}"
      - "RDS_SUBNET_GROUP=${TEST_RDS_SUBNET_GROUP}"
      - "COGNITO_POOL_ID=${TEST_COGNITO_POOL_ID}"
      - "COGNITO_CLIENT_ID=${TEST_COGNITO_CLIENT_ID}"
      - "CLOUDFRONT_URI=${TEST_CLOUDFRONT_URI}"
      - "API_ENDPOINT=${TEST_API_ENDPOINT}"
      - "WARMUP_ENABLED=${TEST_WARMUP_ENABLED}"
      - "BASTION_IP=${TEST_BASTION_IP}"

  deploy-testing:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - "AWS_ACCESS_KEY_ID=${TEST_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${TEST_AWS_SECRET_ACCESS_KEY}"
      - "SERVICE_NAME=${TEST_SERVICE_NAME}"
      - "KEBOOLA_STACK=${TEST_SERVICE_NAME}"
      - "REGION=${TEST_REGION}"
      - "STAGE=${TEST_STAGE}"
      - "SES_EMAIL_FROM=${TEST_SES_EMAIL_FROM}"
      - "RDS_INSTANCE_CLASS=${TEST_RDS_INSTANCE_CLASS}"
      - "RDS_DATABASE=${TEST_RDS_DATABASE}"
      - "RDS_USER=${TEST_RDS_USER}"
      - "RDS_PASSWORD=${TEST_RDS_PASSWORD}"
      - "RDS_HOST=${TEST_RDS_HOST}"
      - "RDS_PORT=${TEST_RDS_PORT}"
      - "RDS_SSL=${TEST_RDS_SSL}"
      - "RDS_SECURITY_GROUP=${TEST_RDS_SECURITY_GROUP}"
      - "S3_BUCKET=${TEST_S3_BUCKET}"
      - "LOG_HOST=${TEST_LOG_HOST}"
      - "LOG_PORT=${TEST_LOG_PORT}"
      - "SLACK_HOOK_URL=${TEST_SLACK_HOOK_URL}"
      - "ACCOUNT_ID=${TEST_ACCOUNT_ID}"
      - "VPC_CF_STACK_ID=${TEST_VPC_CF_STACK_ID}"
      - "VPC_SECURITY_GROUP=${TEST_VPC_SECURITY_GROUP}"
      - "VPC_SUBNET1=${TEST_VPC_SUBNET1}"
      - "VPC_SUBNET2=${TEST_VPC_SUBNET2}"
      - "RDS_SUBNET_GROUP=${TEST_RDS_SUBNET_GROUP}"
      - "COGNITO_POOL_ID=${TEST_COGNITO_POOL_ID}"
      - "COGNITO_CLIENT_ID=${TEST_COGNITO_CLIENT_ID}"
      - "CLOUDFRONT_URI=${TEST_CLOUDFRONT_URI}"
      - "API_ENDPOINT=${TEST_API_ENDPOINT}"
      - "WARMUP_ENABLED=${TEST_WARMUP_ENABLED}"
      - "BASTION_IP=${TEST_BASTION_IP}"

  deploy-production:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - "AWS_ACCESS_KEY_ID=${DEPLOY_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${DEPLOY_AWS_SECRET_ACCESS_KEY}"
      - "SERVICE_NAME=${DEPLOY_SERVICE_NAME}"
      - "KEBOOLA_STACK=${DEPLOY_SERVICE_NAME}"
      - "REGION=${DEPLOY_REGION}"
      - "STAGE=${DEPLOY_STAGE}"
      - "SES_EMAIL_FROM=${DEPLOY_SES_EMAIL_FROM}"
      - "RDS_INSTANCE_CLASS=${DEPLOY_RDS_INSTANCE_CLASS}"
      - "RDS_DATABASE=${DEPLOY_RDS_DATABASE}"
      - "RDS_USER=${DEPLOY_RDS_USER}"
      - "RDS_PASSWORD=${DEPLOY_RDS_PASSWORD}"
      - "RDS_HOST=${DEPLOY_RDS_HOST}"
      - "RDS_PORT=${DEPLOY_RDS_PORT}"
      - "RDS_SSL=${DEPLOY_RDS_SSL}"
      - "RDS_SECURITY_GROUP=${DEPLOY_RDS_SECURITY_GROUP}"
      - "S3_BUCKET=${DEPLOY_S3_BUCKET}"
      - "LOG_HOST=${DEPLOY_LOG_HOST}"
      - "LOG_PORT=${DEPLOY_LOG_PORT}"
      - "SLACK_HOOK_URL=${DEPLOY_SLACK_HOOK_URL}"
      - "ACCOUNT_ID=${DEPLOY_ACCOUNT_ID}"
      - "VPC_CF_STACK_ID=${DEPLOY_VPC_CF_STACK_ID}"
      - "VPC_SECURITY_GROUP=${DEPLOY_VPC_SECURITY_GROUP}"
      - "VPC_SUBNET1=${DEPLOY_VPC_SUBNET1}"
      - "VPC_SUBNET2=${DEPLOY_VPC_SUBNET2}"
      - "RDS_SUBNET_GROUP=${DEPLOY_RDS_SUBNET_GROUP}"
      - "COGNITO_POOL_ID=${DEPLOY_COGNITO_POOL_ID}"
      - "COGNITO_CLIENT_ID=${DEPLOY_COGNITO_CLIENT_ID}"
      - "CLOUDFRONT_URI=${DEPLOY_CLOUDFRONT_URI}"
      - "API_ENDPOINT=${DEPLOY_API_ENDPOINT}"
      - "WARMUP_ENABLED=${DEPLOY_WARMUP_ENABLED}"
      - "BASTION_IP=${DEPLOY_BASTION_IP}"

  lint:
    build:
      context: .
      dockerfile: Dockerfile.tests
    command: >
             sh -c '
             ./node_modules/.bin/eslint .
             '

  test-unit:
    build:
      context: .
      dockerfile: Dockerfile.tests
    volumes:
      - .:/code/app
      - .:/code/lambda
      - .:/code/lib
      - .:/code/test
    working_dir: /code
    links:
      - mysql
    environment:
      - "AWS_ACCESS_KEY_ID=${TEST_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${TEST_AWS_SECRET_ACCESS_KEY}"
      - "FUNC_RDS_DATABASE=${TEST_RDS_DATABASE}"
      - "FUNC_RDS_HOST=127.0.0.1"
      - "FUNC_RDS_PASSWORD=${TEST_RDS_PASSWORD}"
      - "FUNC_RDS_PORT=33060"
      - "FUNC_RDS_SSL=${TEST_RDS_SSL}"
      - "FUNC_RDS_USER=${TEST_RDS_USER}"
      - FUNC_USER_EMAIL
      - FUNC_USER_PASSWORD
      - FUNC_USER_PHONE
      - FUNC_VENDOR
      - "UNIT_RDS_HOST=mysql"
      - "UNIT_RDS_PORT=3306"
      - "UNIT_RDS_USER=user"
      - "UNIT_RDS_PASSWORD=password"
      - "UNIT_RDS_DATABASE=dev_portal"
      - TEST_ACCOUNT_ID
      - TEST_API_ENDPOINT
      - TEST_BASTION_IP
      - TEST_BASTION_SSH_KEY
      - TEST_BASTION_USER
      - TEST_CLOUDFRONT_URI
      - TEST_COGNITO_CLIENT_ID
      - TEST_COGNITO_POOL_ID
      - TEST_KEBOOLA_STACK
      - TEST_LOG_HOST
      - TEST_LOG_PORT
      - TEST_RDS_DATABASE
      - TEST_RDS_HOST
      - TEST_RDS_INSTANCE_CLASS
      - TEST_RDS_PASSWORD
      - TEST_RDS_PORT
      - TEST_RDS_SECURITY_GROUP
      - TEST_RDS_SSL
      - TEST_RDS_SUBNET_GROUP
      - TEST_RDS_USER
      - TEST_REGION
      - TEST_S3_BUCKET
      - TEST_SERVICE_NAME
      - TEST_SES_EMAIL_FROM
      - TEST_SLACK_HOOK_URL
      - TEST_STAGE
      - TEST_VPC_CF_STACK_ID
      - TEST_VPC_SECURITY_GROUP
      - TEST_VPC_SUBNET1
      - TEST_VPC_SUBNET2
      - TEST_WARMUP_ENABLED
      - TEST_PATH
    command: >
             sh -c '
             sleep 10
             && node ./scripts/create-env.js ./env.yml TEST
             && ls -la $$TEST_PATH
             && mocha --timeout 0 --compilers js:babel-core/register $$TEST_PATH
             '

  test-functional:
    build:
      context: .
      dockerfile: Dockerfile.tests
    volumes:
      - .:/code/app
      - .:/code/lambda
      - .:/code/lib
      - .:/code/test
    working_dir: /code
    environment:
      - "AWS_ACCESS_KEY_ID=${TEST_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${TEST_AWS_SECRET_ACCESS_KEY}"
      - "FUNC_RDS_DATABASE=${TEST_RDS_DATABASE}"
      - "FUNC_RDS_HOST=127.0.0.1"
      - "FUNC_RDS_PASSWORD=${TEST_RDS_PASSWORD}"
      - "FUNC_RDS_PORT=33060"
      - "FUNC_RDS_SSL=${TEST_RDS_SSL}"
      - "FUNC_RDS_USER=${TEST_RDS_USER}"
      - FUNC_USER_EMAIL
      - FUNC_USER_PASSWORD
      - FUNC_USER_PHONE
      - FUNC_VENDOR
      - TEST_ACCOUNT_ID
      - TEST_API_ENDPOINT
      - TEST_BASTION_IP
      - TEST_BASTION_SSH_KEY
      - TEST_BASTION_USER
      - TEST_CLOUDFRONT_URI
      - TEST_COGNITO_CLIENT_ID
      - TEST_COGNITO_POOL_ID
      - TEST_KEBOOLA_STACK
      - TEST_LOG_HOST
      - TEST_LOG_PORT
      - TEST_RDS_DATABASE
      - TEST_RDS_HOST
      - TEST_RDS_INSTANCE_CLASS
      - TEST_RDS_PASSWORD
      - TEST_RDS_PORT
      - TEST_RDS_SECURITY_GROUP
      - TEST_RDS_SSL
      - TEST_RDS_SUBNET_GROUP
      - TEST_RDS_USER
      - TEST_REGION
      - TEST_S3_BUCKET
      - TEST_SERVICE_NAME
      - TEST_SES_EMAIL_FROM
      - TEST_SLACK_HOOK_URL
      - TEST_STAGE
      - TEST_VPC_CF_STACK_ID
      - TEST_VPC_SECURITY_GROUP
      - TEST_VPC_SUBNET1
      - TEST_VPC_SUBNET2
      - TEST_WARMUP_ENABLED
      - TEST_PATH
    command: >
             sh -c '
             echo ${TEST_BASTION_SSH_KEY} | base64 -d > bastion_ssh.key
             && chmod 400 bastion_ssh.key
             && ssh -fN $TEST_BASTION_USER@$TEST_BASTION_IP -i bastion_ssh.key -oStrictHostKeyChecking=no -L 33060:$TEST_RDS_HOST:$TEST_RDS_PORT
             && node ./scripts/create-env.js ./env.yml TEST
             && mocha --timeout 0 --compilers js:babel-core/register $$TEST_PATH
             '

  ci-test-unit:
    build:
      context: .
      dockerfile: Dockerfile.tests
    links:
      - mysql
    environment:
      - "AWS_ACCESS_KEY_ID=${TEST_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${TEST_AWS_SECRET_ACCESS_KEY}"
      - "FUNC_RDS_DATABASE=${TEST_RDS_DATABASE}"
      - "FUNC_RDS_HOST=127.0.0.1"
      - "FUNC_RDS_PASSWORD=${TEST_RDS_PASSWORD}"
      - "FUNC_RDS_PORT=33060"
      - "FUNC_RDS_SSL=${TEST_RDS_SSL}"
      - "FUNC_RDS_USER=${TEST_RDS_USER}"
      - FUNC_USER_EMAIL
      - FUNC_USER_PASSWORD
      - FUNC_USER_PHONE
      - FUNC_VENDOR
      - "UNIT_RDS_HOST=mysql"
      - "UNIT_RDS_PORT=3306"
      - "UNIT_RDS_USER=user"
      - "UNIT_RDS_PASSWORD=password"
      - "UNIT_RDS_DATABASE=dev_portal"
      - TEST_ACCOUNT_ID
      - TEST_API_ENDPOINT
      - TEST_BASTION_IP
      - TEST_BASTION_SSH_KEY
      - TEST_BASTION_USER
      - TEST_CLOUDFRONT_URI
      - TEST_COGNITO_CLIENT_ID
      - TEST_COGNITO_POOL_ID
      - TEST_KEBOOLA_STACK
      - TEST_LOG_HOST
      - TEST_LOG_PORT
      - TEST_RDS_DATABASE
      - TEST_RDS_HOST
      - TEST_RDS_INSTANCE_CLASS
      - TEST_RDS_PASSWORD
      - TEST_RDS_PORT
      - TEST_RDS_SECURITY_GROUP
      - TEST_RDS_SSL
      - TEST_RDS_SUBNET_GROUP
      - TEST_RDS_USER
      - TEST_REGION
      - TEST_S3_BUCKET
      - TEST_SERVICE_NAME
      - TEST_SES_EMAIL_FROM
      - TEST_SLACK_HOOK_URL
      - TEST_STAGE
      - TEST_VPC_CF_STACK_ID
      - TEST_VPC_SECURITY_GROUP
      - TEST_VPC_SUBNET1
      - TEST_VPC_SUBNET2
      - TEST_WARMUP_ENABLED
    command: >
             sh -c '
             sleep 10
             && node ./scripts/create-env.js ./env.yml TEST
             && mocha --timeout 0 --compilers js:babel-core/register test/lib test/app
             '

  ci-test-functional:
    build:
      context: .
      dockerfile: Dockerfile.tests
    environment:
      - "AWS_ACCESS_KEY_ID=${TEST_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${TEST_AWS_SECRET_ACCESS_KEY}"
      - "FUNC_RDS_DATABASE=${TEST_RDS_DATABASE}"
      - "FUNC_RDS_HOST=127.0.0.1"
      - "FUNC_RDS_PASSWORD=${TEST_RDS_PASSWORD}"
      - "FUNC_RDS_PORT=33060"
      - "FUNC_RDS_SSL=${TEST_RDS_SSL}"
      - "FUNC_RDS_USER=${TEST_RDS_USER}"
      - FUNC_USER_EMAIL
      - FUNC_USER_PASSWORD
      - FUNC_USER_PHONE
      - FUNC_VENDOR
      - TEST_ACCOUNT_ID
      - TEST_API_ENDPOINT
      - TEST_BASTION_IP
      - TEST_BASTION_SSH_KEY
      - TEST_BASTION_USER
      - TEST_CLOUDFRONT_URI
      - TEST_COGNITO_CLIENT_ID
      - TEST_COGNITO_POOL_ID
      - TEST_KEBOOLA_STACK
      - TEST_LOG_HOST
      - TEST_LOG_PORT
      - TEST_RDS_DATABASE
      - TEST_RDS_HOST
      - TEST_RDS_INSTANCE_CLASS
      - TEST_RDS_PASSWORD
      - TEST_RDS_PORT
      - TEST_RDS_SECURITY_GROUP
      - TEST_RDS_SSL
      - TEST_RDS_SUBNET_GROUP
      - TEST_RDS_USER
      - TEST_REGION
      - TEST_S3_BUCKET
      - TEST_SERVICE_NAME
      - TEST_SES_EMAIL_FROM
      - TEST_SLACK_HOOK_URL
      - TEST_STAGE
      - TEST_VPC_CF_STACK_ID
      - TEST_VPC_SECURITY_GROUP
      - TEST_VPC_SUBNET1
      - TEST_VPC_SUBNET2
      - TEST_WARMUP_ENABLED
    command: >
             sh -c '
             echo ${TEST_BASTION_SSH_KEY} | base64 -d > bastion_ssh.key
             && chmod 400 bastion_ssh.key
             && ssh -fN $TEST_BASTION_USER@$TEST_BASTION_IP -i bastion_ssh.key -oStrictHostKeyChecking=no -L 33060:$TEST_RDS_HOST:$TEST_RDS_PORT
             && node ./scripts/create-env.js ./env.yml TEST
             && mocha --timeout 0 --compilers js:babel-core/register test/functional
             '

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dev_portal
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
