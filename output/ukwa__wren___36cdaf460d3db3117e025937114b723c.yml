# UKWA Heritrix
ukwa-heritrix:
  build: ../ukwa-heritrix
  volumes:
    - ./jobs:/jobs
    - ../../heritrix3:/heritrix3
    - ../../bl-heritrix-modules:/bl-heritrix-modules
  ports:
    - "8443:8443"
  environment:
    - "MONITRIX_ENABLED=1"
  links:
    - redis
    - clamd
    - amqp
    - monitrix
  volumes_from:
    - dvc:rw

# Data Volume Container
# - This is the recommended way to share a data volume between containers.
dvc:
  image: busybox
  volumes:
    - ./output:/heritrix/output
    - ./images:/images
# Hard links seem to have issues when using mapped state, but likely only on docker-machine on OS X:
#    - ./state:/heritrix/state

# Clamd virus scanning Service
clamd:
  build: ../clamd
  ports:
    - "3310:3310"

# RabbitMQ
amqp:
  image: rabbitmq:3.5-management
  ports:
    - "15672:15672"  # management port (guest:guest)
    - "5672:5672"   # amqp port
    - "25672:25672" # cluster port
  log_driver: none

# PhantomJS web page rendering service
# TODO pick up proxy from the environment
webrender:
  build: ../webrender-phantomjs
  ports:
    - "8000:8000"
  links:
    - openwayback

# Other daemons and processes that coordinate the crawl
shepherd:
  build: ../shepherd
  environment:
    - "AMQP_URL=amqp://guest:guest@amqp:5672/%2f"
    - "QUEUE_NAME=FC-4-uris-to-index"
    - "CDXSERVER_URL=http://cdxserver:8080/fc"
    - "W3ACT_URL=http://192.168.99.1:9000/act/"
    - "W3ACT_USER=wa-sysadm@bl.uk"
    - "W3ACT_PW=sysAdmin"
    - "WAYBACK_URL=http://${DOCKER_HOSTNAME}:8080/wayback"
    - "PYTHONUNBUFFERED=TRUE"
  links:
    - amqp
    - cdxserver
    - webrender
  volumes_from:
    - dvc:rw

# tinycdxserver
cdxserver:
  build: ../tinycdxserver
  ports:
    - "9090:8080"
# I don't think this works on dev systems - should be fine in live.
#  volumes:
#    - ./cdx:/data
  volumes:
    - /heritrix/cdx:/data

# OpenWayback, based loosely on UNB Libraries Dockerfile
openwayback:
  build: ../openwayback
  ports:
    - "8080:8080"
    - "8090:8090"
  environment:
    - "WAYBACK_BASEDIR=/data"
    - "WAYBACK_URL_HOST=${DOCKER_HOSTNAME}"
    - "WAYBACK_URL_PREFIX=http://${DOCKER_HOSTNAME}:8080"
    - "CDX_INDEX_SERVER=http://cdxserver:8080/fc"
  links:
    - cdxserver
  volumes_from:
    - dvc:ro

# PDF to HTML service
pdf2htmlex:
#  image: ukwa/pdf2htmlex
  build: ../pdf2htmlex
  ports:
    - "5000:5000"

# Monitrix (II), built on ELK by extending Logstash to support Heritrix logs
monitrix:
  build: ../monitrix
  ports:
    - "5601:5601"
    - "9200:9200"
    - "5001:5000"
    - "5044:5044"

# A redis instance to act as an alternative "already-seen URI" cache
redis:
  image: redis:3.0
  command: "redis-server --appendonly yes"
  ports:
    - "6379:6379"
#  volumes:
#    - ./redis/:/data

# A single-node Hadoop and HDFS instance
hadoop:
  image: sequenceiq/hadoop-docker:2.7.0
  hostname: hadoop
  command: "/etc/bootstrap.sh -d"
  ports:
    - "50010:50010"
    - "50020:50020"
    - "50070:50070"
    - "50075:50075"
    - "50090:50090"
    - "8020:8020"
    - "9000:9000"
    # Mapred ports
    - "19888:19888"
    # Yarn ports
    - "8030:8030"
    - "8031:8031"
    - "8032:8032"
    - "8033:8033"
    - "8040:8040"
    - "8042:8042"
    - "8088:8088"
    # Other ports
    - "49707:49707"
    - "2122:2122"

# Apache Tika, for text and metadata extraction:
#tika:
#  image: logicalspark/docker-tikaserver
#  ports: 
#    - "9998:9998"

## W3ACT (build in place and run)
#w3act:
#  build: ../w3act
#  volumes:
#    - ../w3act/w3act/target/universal/stage:/w3act
#  ports:
#    - "9000:9000"#

## For W3ACT data
#postgres:
#  image: postgres:9.4
#  environment:
#    - "POSTGRES_PASSWORD=pgpwd"#
