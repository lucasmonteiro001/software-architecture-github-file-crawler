version: '2'

networks:
  apix:
    driver: bridge

volumes:
  fcrepo-data: {}
  fuseki-data: {}

services:

# Base images

  base-java:
    container_name: base-java
    build: docker/base/java
    image: apix-poc/java
    command: /bin/true

  base-karaf:
    container_name: base-karaf
    build: docker/base/karaf
    image: apix-poc/karaf
    depends_on:
      - base-java
    command: /bin/true

# Services

  fcrepo:
    container_name: fcrepo
    build: docker/services/fcrepo
    image: apix-poc/fcrepo
    depends_on:
      - base-java
    volumes:
      - fcrepo-data:/shared
    networks:
      apix:
        aliases:
          - fcrepo.docker.local
    environment:
      - FCREPO_PORT=80
    ports:
      - "8080:80"
      - "61613:61613"
      - "61616:61616"

  fuseki:
    build: docker/services/fuseki
    image: apix-poc/fuseki
    depends_on:
      - base-java
    volumes:
      - fuseki-data:/shared
    networks:
      apix:
        aliases:
          - fuseki.docker.local
    ports:
      - "3030:3030"
    environment:
      - FUSEKI_DEFAULT_DATASET=/fcrepo-triple-index

  indexing-triplestore:
    build: proof-of-concept/indexing-triplestore
    image: apix-poc/indexing-triplestore
    networks:
      - apix
    depends_on:
      - base-java
    environment:
      - FCREPO_BASEURL=fcrepo.docker.local/fcrepo/rest
      - JMS_BROKERURL=tcp://fcrepo.docker.local:61616
      - TRIPLESTORE_BASEURL=fuseki.docker.local:3030/fcrepo-triple-index/update
      - ERROR_MAMXREDELIVERIES=100000

  go-proxy:
    build: proof-of-concept/go-proxy/target
    image: apix-poc/go-proxy
    depends_on:
      - build-go-proxy
    networks:
      apix:
        aliases:
          - go-proxy.docker.local
    ports:
      - "8082:80"
    environment:
      - PROXY_ADDR=fcrepo.docker.local
      - PROXY_PATH=/
      - BIND_ADDR=:80

# Tools & Utilities

  # Contains gcc and go
  builder:
    container_name: builder
    build: docker/tools/builder-native
    image: apix-poc/builder
    command: /bin/true

  # 'wrk' utility for measuring latency and throughput
  wrk:
    container_name: wrk
    build: docker/tools/wrk/target
    image: apix-poc/wrk
    networks:
      - apix
    depends_on:
      - build-wrk

# Builders.  These use Docker to build some artifact necessary for creating an image later on.

  build-go-proxy:
    container_name: build_go_proxy
    image: apix-poc/builder
    depends_on:
      - builder
    volumes:
      - ./proof-of-concept/go-proxy/target:/go/src/go-proxy
    command: go build --ldflags '-linkmode external -extldflags "-static"'
    working_dir: /go/src/go-proxy

  build-wrk:
    container_name: build_wrk
    image: apix-poc/builder
    depends_on:
      - builder
    volumes: 
      - ./docker/tools/wrk/target:/mnt/wrk
    command: /bin/sh /mnt/wrk/build.sh
    environment:
      - WRK_DIR=/mnt/wrk
