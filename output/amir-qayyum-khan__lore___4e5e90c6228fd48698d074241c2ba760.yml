db:
  image: postgres
  ports:
    - "5432"
redis:
  image: redis
  ports:
    - "6379"
elastic:
  image: elasticsearch
  ports:
    - "9200"
stats:
  image: kamon/grafana_graphite
  ports:
    - "8125/udp:8125/udp"
    - "8071:80"
web:
  build: .
  command: >
    /bin/bash -c '
    export HOST_IP=$(netstat -nr | grep ^0\.0\.0\.0 | awk "{print \$2}") &&
    sleep 3 &&
    npm install --production --no-bin-links &&
    python manage.py migrate &&
    python manage.py runserver 0.0.0.0:$PORT'
  volumes:
    - .:/src
    - /tmp
  environment:
    DEBUG: True
    LORE_LOG_LEVEL: DEBUG
    DJANGO_LOG_LEVEL: INFO
    PORT: 8070
    DATABASE_URL: postgres://postgres@db:5432/postgres
    LORE_DB_DISABLE_SSL: True
    ALLOWED_HOSTS:
    LORE_USE_CAS:
    LORE_ADMIN_EMAIL:
    LORE_CAS_URL:
    LORE_GOOGLE_ANALYTICS_ID:
    LORE_STATSD_HOST: stats
    CELERY_ALWAYS_EAGER: False
    CELERY_RESULT_BACKEND: redis://redis:6379/4
    BROKER_URL: redis://redis:6379/4
    HAYSTACK_URL: elastic:9200
  ports:
    - "8070:8070"
  links:
    - db
    - redis
    - elastic
    - stats
celery:
  image: lore_web
  command: >
    /bin/bash -c '
    sleep 3;
    celery -A lore worker -l debug'
  volumes_from:
    - web
  environment:
    DEBUG: True
    LORE_LOG_LEVEL: DEBUG
    LORE_DB_DISABLE_SSL: True
    LORE_STATSD_HOST: stats
    DJANGO_LOG_LEVEL: INFO
    DATABASE_URL: postgres://postgres@db:5432/postgres
    BROKER_URL: redis://redis:6379/4
    CELERY_RESULT_BACKEND: redis://redis:6379/4
    HAYSTACK_URL: elastic:9200
  links:
    - db
    - elastic
    - redis
    - stats
