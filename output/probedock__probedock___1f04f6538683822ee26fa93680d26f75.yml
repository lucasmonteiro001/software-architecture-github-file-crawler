# Nginx web server.
web:
  image: nginx:1.9
  command: nginx
  links:
    - app
  ports:
    - "{{ PROBEDOCK_DOCKER_WEB_CONTAINER_PORT }}:80"
  volumes:
    - "{{ PROBEDOCK_RELEASE_PATH }}/nginx.conf:/etc/nginx/nginx.conf:ro"
    - "{{ PROBEDOCK_RELEASE_PATH }}/public:/var/lib/probedock/public"
  restart: always

# Application in production mode.
# The application will not serve assets.
app:
  image: "{{ PROBEDOCK_IMAGE }}"
  links:
    - db
    - cache
  volumes:
    - "{{ PROBEDOCK_RELEASE_PATH }}/public:/usr/src/app/public"
  restart: always
  environment:
    RAILS_ENV: production
    PROBEDOCK_DATABASE_HOST: db
    PROBEDOCK_DATABASE_NAME: probedock
    PROBEDOCK_DATABASE_USERNAME: probedock
    PROBEDOCK_DATABASE_PASSWORD:
    PROBEDOCK_REDIS_URL: "cache:6379:0"
    PROBEDOCK_SECRET_KEY_BASE:
    PROBEDOCK_JWT_SECRET:
    PROBEDOCK_LOG_LEVEL:
    PROBEDOCK_LOG_TO_STDOUT: "1"
    PROBEDOCK_MAIL_ADDRESS:
    PROBEDOCK_MAIL_PORT:
    PROBEDOCK_MAIL_DOMAIN:
    PROBEDOCK_MAIL_USERNAME:
    PROBEDOCK_MAIL_PASSWORD:
    PROBEDOCK_MAIL_AUTHENTICATION:
    PROBEDOCK_MAIL_FROM:
    PROBEDOCK_MAIL_FROM_NAME:
    PROBEDOCK_APP_PROTOCOL:
    PROBEDOCK_APP_HOST:
    PROBEDOCK_APP_PORT:
    PROBEDOCK_UNICORN_USER: root
    PROBEDOCK_UNICORN_WORKERS:

# Background job processing task.
job:
  image: "{{ PROBEDOCK_IMAGE }}"
  command: rake resque:work
  links:
    - db
    - cache
  restart: always
  environment:
    QUEUE: "*"
    INTERVAL: "2"
    TERM_CHILD: "1"
    RAILS_ENV: production
    PROBEDOCK_DATABASE_HOST: db
    PROBEDOCK_DATABASE_NAME: probedock
    PROBEDOCK_DATABASE_USERNAME: probedock
    PROBEDOCK_DATABASE_PASSWORD:
    PROBEDOCK_REDIS_URL: "cache:6379:0"
    PROBEDOCK_SECRET_KEY_BASE:
    PROBEDOCK_JWT_SECRET:
    PROBEDOCK_LOG_LEVEL:
    PROBEDOCK_LOG_TO_STDOUT: "1"
    PROBEDOCK_MAIL_ADDRESS:
    PROBEDOCK_MAIL_PORT:
    PROBEDOCK_MAIL_DOMAIN:
    PROBEDOCK_MAIL_USERNAME:
    PROBEDOCK_MAIL_PASSWORD:
    PROBEDOCK_MAIL_AUTHENTICATION:
    PROBEDOCK_MAIL_FROM:
    PROBEDOCK_MAIL_FROM_NAME:
    PROBEDOCK_APP_PROTOCOL:
    PROBEDOCK_APP_HOST:
    PROBEDOCK_APP_PORT:

# PostgreSQL database.
db:
  image: postgres:9.4
  volumes:
    - "{{ PROBEDOCK_RELEASE_PATH }}/docker/postgres/db-init-scripts:/docker-entrypoint-initdb.d"
    - "{{ PROBEDOCK_ENV_PATH }}/postgresql/data:/var/lib/postgresql/data"
  restart: always
  environment:
    POSTGRES_PASSWORD:
    PROBEDOCK_DATABASE_NAME: probedock
    PROBEDOCK_DATABASE_USERNAME: probedock
    PROBEDOCK_DATABASE_PASSWORD:

# Redis in-memory database.
cache:
  image: redis:2.8
  command: redis-server --appendonly yes
  volumes:
    - "{{ PROBEDOCK_ENV_PATH }}/redis/data:/data"
  restart: always

# Run a rake task.
# This is meant to be run as a one-off task (with "run" instead of "up").
task:
  image: "{{ PROBEDOCK_IMAGE }}"
  command: rake -T
  links:
    - db
    - cache
  volumes:
    - "{{ PROBEDOCK_RELEASE_PATH }}/public:/usr/src/app/public"
    - "{{ PROBEDOCK_RELEASE_PATH }}/tmp:/usr/src/app/tmp"
  restart: "no"
  environment:
    RAILS_ENV: production
    PROBEDOCK_DATABASE_HOST: db
    PROBEDOCK_DATABASE_NAME: probedock
    PROBEDOCK_DATABASE_USERNAME: probedock
    PROBEDOCK_DATABASE_PASSWORD:
    PROBEDOCK_REDIS_URL: "cache:6379:0"
    PROBEDOCK_SECRET_KEY_BASE:
    PROBEDOCK_JWT_SECRET:
    PROBEDOCK_LOG_LEVEL:
    PROBEDOCK_LOG_TO_STDOUT: "1"
    PROBEDOCK_MAIL_ADDRESS:
    PROBEDOCK_MAIL_PORT:
    PROBEDOCK_MAIL_DOMAIN:
    PROBEDOCK_MAIL_USERNAME:
    PROBEDOCK_MAIL_PASSWORD:
    PROBEDOCK_MAIL_AUTHENTICATION:
    PROBEDOCK_MAIL_FROM:
    PROBEDOCK_MAIL_FROM_NAME:
    PROBEDOCK_APP_PROTOCOL:
    PROBEDOCK_APP_HOST:
    PROBEDOCK_APP_PORT:
