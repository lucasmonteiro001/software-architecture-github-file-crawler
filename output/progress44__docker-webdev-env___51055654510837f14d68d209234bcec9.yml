version: '3'

services:

  # BUILD PHP 7
  php: 
    image: php_$PROJECT_NAME:$VERSION
    container_name: php_$PROJECT_NAME
    build: ../images/php/7.0
    restart: always
    tty: true
    depends_on:
      - redis
      - db
    expose: 
      - "9000"
    volumes:
      - backend_:/www
    links:
      - db:mysql
      - redis
    env_file:
      - ../images/php/php.env
    networks:
      - public
      - private
    healthcheck:
      test: sh
      interval: 1m30s
      timeout: 10s
      retries: 3
    deploy:
      mode: replicated
      replicas: 6
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: pause
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          cpus: '0.001'
          memory: 512M
        reservations:
          cpus: '0.0001'
          memory: 200M

  # MYSQL 
  db:
    image: db_$PROJECT_NAME:$VERSION
    container_name: db_$PROJECT_NAME
    build: ../images/mysql
    volumes:
      - mysql_:/var/lib/mysql
    restart: always
    tty: true
    expose: 
      - "3306"
    env_file:
      - ../images/mysql/db.env
    networks:
      - private
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          cpus: '0'
          memory: 1.5G
        reservations:
          cpus: '0.0001'
          memory: 1G
  
  # REDIS
  redis:
    image: redis_$PROJECT_NAME:$VERSION
    container_name: redis_$PROJECT_NAME
    build: ../images/redis
    volumes:
      - redis_:/data
    expose: 
      - "6379"
    restart: always
    tty: true
    networks:
      - private
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          cpus: '0.001'
          memory: 1G
        reservations:
          cpus: '0.0001'
          memory: 1G

  # NODE
  node:
    image: node_$PROJECT_NAME:$VERSION
    container_name: node_$PROJECT_NAME
    build: ../images/node
    volumes:
      - frontend_:/app
    expose: 
      - "3000"
    restart: always
    tty: true
    networks:
      - private
      - loadbalancer0
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          cpus: '0.001'
          memory: 1G
        reservations:
          cpus: '0.0001'
          memory: 1G

  # nginx
  nginx:
    image: nginx_$PROJECT_NAME:$VERSION
    build: ../images/nginx
    container_name: nginx_$PROJECT_NAME
    restart: always
    tty: true
    env_file: 
      - ../images/nginx/proxy.env
    volumes:
      - backend_:/www
    depends_on:
      - php
    links:
      - db:mysql
      - php:php7
    expose: 
      - "80"
      - "443"
    ports: 
      - "$PROXY_HTTP:80"
      - "$PROXY_HTTPS:443"
    networks:
      - private
      - loadbalancer0
    healthcheck:
      test: sh
      interval: 1m30s
      timeout: 10s
      retries: 3
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          cpus: '0.001'
          memory: 200M
        reservations:
          cpus: '0.0001'
          memory: 200M

volumes:
  mongo_: 
  redis_:
  mysql_:
  backend_:
  frontend_:

networks:
  public:
  private:
    internal: true
  loadbalancer0:
    external:
      name: network_loadbalancer0