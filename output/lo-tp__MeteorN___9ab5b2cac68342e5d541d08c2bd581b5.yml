version: '2'
services: 
    node:
        container_name: meteor_server
        build:
            context: .
            dockerfile: ./dockerfiles/node.dockerfile
        environment:
          - MONGO_URL=mongodb://s1:27017,pri:27017/meteor?replicaSet=meteor&readPreference=primaryPreferred&w=majority
          - MONGO_OPG_URL=mongodb://s1:27017,pri:27017/local?replicaSet=meteor
          - ROOT_URL=http://127.0.0.1
          - PORT=8080
        command:  node main.js
        restart: always                      
        networks:
                mongo_net:
                        aliases:
                                    - app
                app_net:
                        aliases:
                                    - meteor
    primary:
        container_name: primary
        image: mongo:3.2.8
        restart: always                      
        volumes:
            - ./script/:/tmp/script/
            - ./db/dbfiles/:/data/db/
            - ./db/meteor/:/tmp/dump/
        command: [mongod,--replSet,meteor]
        networks:
                mongo_net:
                        aliases:
                                - pri

    arbiter:
        image: mongo:3.2.8
        container_name: arbiter
        restart: always                      
        command: [mongod,--replSet,meteor]
        networks:
                mongo_net:
                        aliases:
                                - arb

    secondary1:
        image: mongo:3.2.8
        container_name: secondary
        restart: always                      
        command: [mongod,--replSet,meteor]
        networks:
                mongo_net:
                        aliases:
                                - s1
    nginx:
        build:
            context: .
            dockerfile: ./dockerfiles/nginx.dockerfile
        container_name: nginx
        restart: always                      
        volumes:
            - ./conf:/etc/nginx/
        ports:
            - "80:80"
        networks:
                app_net:
                        aliases:
                                    - nginx
networks:
     mongo_net:
     app_net:
