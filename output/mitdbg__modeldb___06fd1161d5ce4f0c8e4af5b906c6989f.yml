version: '3'

networks:
  modeldb_net:
    driver: bridge

services:
  httpproxy:
    image: jupyter/configurable-http-proxy
    env_file: .env
    container_name:  tmpnb-proxy
    network_mode: host
    command: --default-target http://127.0.0.1:9999
    ports:
      - "8000:8000"

  # Note docker_network in the command below must match the network generated
  # for the container 'backend', generated by Docker Compose as
  # project_name + network_name, i.e. 'demo_modeldb_net'
  tmpnb_orchestrate:
    image: jupyter/tmpnb
    network_mode: host
    container_name: tmpnb_orchestrate
    env_file: .env
    volumes:
      - /var/run/docker.sock:/docker.sock
    command: python orchestrate.py --image='mitdbg/modeldb-notebook' --docker_network='demo_modeldb_net' --pool_size=10 --command='jupyter notebook --no-browser --port {port} --ip=0.0.0.0 --NotebookApp.base_url=/{base_path} --NotebookApp.port_retries=0 --NotebookApp.token="" --NotebookApp.disable_check_xsrf=True'

  mongo:
    image: mongo:3.4
    networks:
      modeldb_net:
        aliases:
          - mongo

  backend:
    build:
      context: ..
      dockerfile: dockerbuild/Dockerfile-backend
    image: mitdbg/modeldb-backend:latest
    networks:
      modeldb_net:
        aliases:
          - backend
    command: ["mongo"]

  frontend:
    build:
      context: ..
      dockerfile: dockerbuild/Dockerfile-frontend
    image: mitdbg/modeldb-frontend:latest
    networks:
      modeldb_net:
        aliases:
          - frontend
    ports:
      - "3000:3000"
    command: ["backend"]
