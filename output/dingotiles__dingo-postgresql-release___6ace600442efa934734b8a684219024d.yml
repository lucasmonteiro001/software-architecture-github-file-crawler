version: '2'

services:
  patroni1:
    build: postgresql95-patroni
    image: dingotiles/dingo-postgresql95:pre-test
    container_name: patroni1
    ports: ["5001:5432", "8001:8008"]
    environment:
      NAME: patroni1
      NODE_ID: patroni1
      CELL_GUID: cell1
      PATRONI_SCOPE: test-cluster
      ETCD_HOST_PORT: ${DOCKER_HOST_IP}:4001
      DOCKER_HOSTNAME: ${DOCKER_HOST_IP}
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin
      SUPERUSER_USERNAME: postgres
      SUPERUSER_PASSWORD: postgres
      APPUSER_USERNAME: app
      APPUSER_PASSWORD: app
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      WAL_S3_BUCKET:
      AWS_REGION:
      WALE_BACKUP_THRESHOLD_MEGABYTES: 10240
      WALE_BACKUP_THRESHOL_PERCENTAGE: 30
    depends_on: [registrator, etcd]
  patroni2:
    build: postgresql95-patroni
    image: dingotiles/dingo-postgresql95:pre-test
    container_name: patroni2
    ports: ["5002:5432", "8002:8008"]
    environment:
      NAME: patroni2
      NODE_ID: patroni2
      CELL_GUID: cell2
      PATRONI_SCOPE: test-cluster
      ETCD_HOST_PORT: ${DOCKER_HOST_IP}:4001
      DOCKER_HOSTNAME: ${DOCKER_HOST_IP}
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin
      SUPERUSER_USERNAME: postgres
      SUPERUSER_PASSWORD: postgres
      APPUSER_USERNAME: app
      APPUSER_PASSWORD: app
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      WAL_S3_BUCKET:
      AWS_REGION:
      WALE_BACKUP_THRESHOLD_MEGABYTES: 10240
      WALE_BACKUP_THRESHOL_PERCENTAGE: 30
    depends_on: [registrator, etcd]
  etcd:
    image: quay.io/coreos/etcd:v2.3.7
    ports: ["4001:4001", "2380:2380", "2379:2379"]
    command:
    - -name=etcd0
    - -advertise-client-urls=http://${DOCKER_HOST_IP}:2379,http://${DOCKER_HOST_IP}:4001
    - -listen-client-urls=http://0.0.0.0:2379,http://0.0.0.0:4001
    - -initial-advertise-peer-urls=http://${DOCKER_HOST_IP}:2380
    - -listen-peer-urls=http://0.0.0.0:2380
    - -initial-cluster-token=etcd-cluster-1
    - -initial-cluster=etcd0=http://${DOCKER_HOST_IP}:2380
    - -initial-cluster-state=new
  registrator:
    image: cfcommunity/registrator:latest
    network_mode: "host"
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock
    command: /bin/registrator -hostname ${DOCKER_HOST_IP} -ip ${DOCKER_HOST_IP} etcd://${DOCKER_HOST_IP}:4001
    depends_on: [etcd]

  tests:
    build: ./tests/
    image: dingo-pg-container-tests
    volumes:
    - test_state:/test-state
    environment:
      TEST_VOLUME: /test-state
      DOCKER_HOST_IP:
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin
      SUPERUSER_USERNAME: postgres
      SUPERUSER_PASSWORD: postgres
      APPUSER_USERNAME: app
      APPUSER_PASSWORD: app
      PATRONI_SCOPE: test-cluster
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      WAL_S3_BUCKET:
      AWS_REGION:

volumes:
  test_state:
