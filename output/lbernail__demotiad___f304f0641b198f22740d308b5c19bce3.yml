version: "2"

services:
  consul:
    image: consul
    container_name: consul
    ports:
      - 8500:8500
    environment:
      - SERVICE_IGNORE=true

  registrator:
    image: gliderlabs/registrator
    container_name: registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: -internal consul://consul:8500
    depends_on:
      - consul

  redis:
    image: redis:alpine
    container_name: redis
    ports: 
      - "6379:6379"
    depends_on:
      - registrator

  votegreen:
    build: ./vote
    image: demotiad/vote
    command: python app.py
    environment:
      - "CONSUL_HOST=consul"
      - "COLOR=green"
      - "SERVICE_NAME=votegreen"
    volumes:
      - ./vote:/app

  voteblue:
    build: ./vote
    image: demotiad/vote
    environment:
      - "CONSUL_HOST=consul"
      - "COLOR=blue"
      - "SERVICE_NAME=voteblue"

  dynhaproxy:
    build: ./dynhaproxy
    image: demotiad/dynhaproxy
    container_name: dynhaproxy
    command: /usr/local/bin/consul-template -consul=consul:8500 -template='/etc/haproxy/haproxy.ctmpl:/etc/haproxy/haproxy.cfg' -exec='haproxy -p /run/haproxy.pid -f /etc/haproxy/haproxy.cfg'
    depends_on:
      - consul
    ports: 
      - "8080:80"

  dynnginx:
    build: ./dynnginx
    image: demotiad/dynnginx
    container_name: dynnginx
    command: /usr/local/bin/consul-template -consul=consul:8500 -template='/etc/nginx/nginx.ctmpl:/etc/nginx/nginx.conf' -exec="nginx -g 'daemon off;'" -exec-reload-signal=SIGHUP
    depends_on:
      - consul
    ports: 
      - "9080:80"
    environment:
      - "SERVICE_443_IGNORE=true"
      - "SERVICE_80_NAME=dynnginx"
