version: "2"
services:
  postgres:
    image: library/postgres:alpine
    expose:
      - "5432"
    volumes:
      - pgdata:{PGDATA}
    restart: always
    environment:
      - POSTGRES_USER={POSTGRES_USER}
      - POSTGRES_PASSWORD={POSTGRES_PASSWORD}
      - POSTGRES_DB={POSTGRES_DB}
      - PGDATA={PGDATA}
  psql:
    image: library/postgres:alpine
    command: psql -h postgres -p 5432 -U {POSTGRES_USER} -W {POSTGRES_PASSWORD}
  pgweb:
    image: sosedoff/pgweb
    depends_on: 
      - postgres
    ports: 
      - "{PGWEB_PORT}:8081"
    environment:
      - DATABASE_URL=postgres://{POSTGRES_USER}:{POSTGRES_PASSWORD}@postgres:5432/{POSTGRES_DB}?sslmode=disable
  redis:
    image: library/redis:alpine
    expose:
      - "6379"
    volumes:
      - redisdata:{REDISDATA}
    restart: always
  phantomjs:
    image: wernight/phantomjs:2
    expose:
      - "8910"
    volumes: 
      - .:{WORK_DIR}
    command: phantomjs --proxy={PROXY_ADDRESS}:{PROXY_PORT} --proxy-type={PROXY_TYPE} --webdriver=8910
  scrapy:
    build:
     context: .
     dockerfile: Dockerfile
    volumes: 
      - .:{WORK_DIR}
    working_dir: {WORK_DIR}
    environment:
      - POSTGRES_USER={POSTGRES_USER}
      - POSTGRES_PASSWORD={POSTGRES_PASSWORD}
      - POSTGRES_DB={POSTGRES_DB}
      - PROXY_ADDRESS={PROXY_ADDRESS}
      - PROXY_PORT={PROXY_PORT}
      - PROXY_TYPE={PROXY_TYPE}
    depends_on: 
      - phantomjs
      - postgres
      - redis
    command: python run.py
  phantomjs-vps:
    image: wernight/phantomjs:2
    expose:
      - "8910"
    volumes: 
      - .:{WORK_DIR}
    command: phantomjs --webdriver=8910
  scrapy-vps:
    build:
      context: .
      dockerfile: Dockerfile.vps
    volumes: 
      - .:{WORK_DIR}
    working_dir: {WORK_DIR}
    environment:
      - POSTGRES_USER={POSTGRES_USER}
      - POSTGRES_PASSWORD={POSTGRES_PASSWORD}
      - POSTGRES_DB={POSTGRES_DB}
      - PROXY_ADDRESS={PROXY_ADDRESS}
      - PROXY_PORT={PROXY_PORT}
      - PROXY_TYPE={PROXY_TYPE}
    depends_on: 
      - phantomjs-vps
      - postgres
      - redis
    command: python run.py
volumes:
  pgdata:
  redisdata: