version: '2'
services:
  proxy:
    image: nginx
    ports:
        - "80"
    links:
        - apollo
        - galaxy
    volumes:
        - "./nginx/conf:/etc/nginx/conf.d"
  galaxy:
    image: quay.io/erasche/docker-galaxy-annotation
    environment:
        NONUSE: nodejs,proftp,reports
        GALAXY_LOGGING: full
        GALAXY_WEBAPOLLO_URL: "http://apollo:8080/apollo"
        GALAXY_WEBAPOLLO_EXT_URL: "/apollo"
        GALAXY_WEBAPOLLO_PASSWORD: "password"
        GALAXY_WEBAPOLLO_USER: admin@local.host
        GALAXY_SHARED_DIR: /apollo-data
  apollo:
    image: gmod/apollo:latest
    links:
      - "apollo_db:db"
    environment:
      WEBAPOLLO_DB_USERNAME: postgres
      WEBAPOLLO_DB_PASSWORD: password
      WEBAPOLLO_DB_DRIVER: "org.postgresql.Driver"
      WEBAPOLLO_DB_DIALECT: "org.hibernate.dialect.PostgresPlusDialect"
      WEBAPOLLO_DB_URI: "jdbc:postgresql://db/postgres"
      WEBAPOLLO_CHADO_DB_USERNAME: postgres
      WEBAPOLLO_CHADO_DB_PASSWORD: password
      WEBAPOLLO_CHADO_DB_DRIVER: "org.postgresql.Driver"
      WEBAPOLLO_CHADO_DB_DIALECT: "org.hibernate.dialect.PostgresPlusDialect"
      WEBAPOLLO_CHADO_DB_URI: "jdbc:postgresql://chado/postgres"
    volumes_from:
        - "galaxy:ro"
  apollo_db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
  #tripal:
    #image: erasche/tripal:latest
    #links:
      #- chado:postgres
    #volumes:
      #- /var/www/html/sites
      #- /var/www/private
    #environment:
      #UPLOAD_LIMIT: 20M
      #MEMORY_LIMIT: 128M
      #BASE_URL: "http://localhost:8080/tripal"
      #BASE_URL_PROTO: "http://"
      #DB_DRIVER: pgsql
      #DB_NAME: postgres
      #DB_HOST: postgres
      #DB_PASS: password
      #DB_USER: postgres
  chado:
    image: erasche/chado:latest
    environment:
      - POSTGRES_PASSWORD=password
        # The default chado image would try to install the schema on first run,
        # we just want the tools to be available.
      - INSTALL_CHADO_SCHEMA=0
