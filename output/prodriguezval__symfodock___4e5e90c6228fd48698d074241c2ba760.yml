version: '2'

services:
    ### Symfony Application Code Container ######################

    volumes_source:
        image: tianon/true
        volumes:
            - ../${APP_DIR}/:/var/www/symfony
            - ./logs/symfony/:/var/www/symfony/var/logs   # Log files from Symfony              
            # Demonstration of how to mount multiple sites
            # - ../../site_a/:/var/www/site_a
            # - ../../site_b/:/var/www/site_b

    ### Workspace Utilities Container ###########################

    workspace:
        build:
            context: ./workspace
            args:
                - INSTALL_XDEBUG=${INSTALL_XDEBUG}
                - INSTALL_MONGO=${INSTALL_MONGO}
                - INSTALL_NODE=${INSTALL_NODE}
                - COMPOSER_GLOBAL_INSTALL=${COMPOSER_GLOBAL_INSTALL}
                - INSTALL_WORKSPACE_SSH=${INSTALL_WORKSPACE_SSH}
                - PUID=${PUID}
                - PGID=${PGID}
                - NODE_VERSION=${NODE_VERSION}
        volumes_from:
            - volumes_source
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:10.0.75.1"
        ports:
           - "222:22"
        tty: true

    ### PHP-FPM Container #######################################

    php-fpm:
        build:
            context: ./php7-fpm
            args:
                - INSTALL_XDEBUG=${INSTALL_XDEBUG}
                - INSTALL_MONGO=${INSTALL_MONGO}
                - INSTALL_ZIP_ARCHIVE=${INSTALL_ZIP_ARCHIVE}
                - INSTALL_MEMCACHED=${INSTALL_MEMCACHED}
                - INSTALL_OPCACHE=${INSTALL_OPCACHE}
                - IS_PROD=${IS_PROD}
            dockerfile: Dockerfile
        volumes_from:
            - volumes_source
        expose:
            - "9000"
        links:
            - workspace
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:10.0.75.1"
        environment:
            # IMPORTANT: Set the Remote Interpreter entry matching name to `symfony`
            - PHP_IDE_CONFIG="serverName=symfony"
                
    ### MySQL Server Container ##################################    
    mysql:
        image: mysql
        ports:
            - 3306:3306
        volumes_from:
            - volumes_data
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: symfony
            MYSQL_USER: user
            MYSQL_PASSWORD: secret

    ### PostgreSQL Container ####################################
    postgres:
        image: postgres
        volumes_from:
            - volumes_data
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: symfony
            POSTGRES_USER: root
            POSTGRES_PASSWORD: secret
    
    ### Redis Server Container ##################################    
    redis:
        image: redis:alpine
        ports:
            - 6379:6379
    
    ### Nginx Server Container ##################################

    nginx:
        build:
            context: ./nginx
            args:
                - PHP_UPSTREAM=${PHP_UPSTREAM}
        volumes_from:
            - volumes_source
        volumes:
            - ./logs/nginx/:/var/log/nginx
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm
    
    ### Elastic Logstash Kibana ################################
    elk:
        image: willdurand/elk
        volumes:
            - ./elk/logstash/:/etc/logstash
            - ./elk/logstash/patterns:/opt/logstash/patterns
        volumes_from:
            - nginx
            - volumes_source
        ports:
            - 81:80       #Kibana
            # The following ports are for exposing elastic
            - 9200:9200 # Rest

    ### Rabbitmq Server Container ##################################
    rabbitmq:
        image: rabbitmq:3-management
        hostname: eea-rabbit
        restart: always
        environment:
          - RABBITMQ_DEFAULT_USER=root
          - RABBITMQ_DEFAULT_PASS=secret
        ports:
          - 5672:5672   # port for the daemon API, can be exposed to public.
          - 15672:15672 # port for the Management interface

    ### MongoDB Container #######################################

    mongo:
        image: mongo
        ports:
            - "27017:27017"
        volumes_from:
            - volumes_data

    ### Databases Data Container ################################

    volumes_data:
        image: tianon/true
        volumes:
            - ./data/mysql:/var/lib/mysql
            - ./data/postgres:/var/lib/postgres
            - ./data/memcached:/var/lib/memcached
            - ./data/redis:/data
            - ./data/neo4j:/var/lib/neo4j/data
            - ./data/mongo:/data/db
            - ./data/sessions:/sessions
