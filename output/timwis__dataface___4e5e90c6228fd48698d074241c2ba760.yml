version: '2'
services:
  postgres:
    image: postgres
    volumes:
      - ./db/get-schema.sql:/docker-entrypoint-initdb.d/get-schema.sql
      - ./db/rename-column.sql:/docker-entrypoint-initdb.d/rename-column.sql
      - ./db/insert-column.sql:/docker-entrypoint-initdb.d/insert-column.sql
      - ./db/drop-column.sql:/docker-entrypoint-initdb.d/drop-column.sql
      - ./db/rename-table.sql:/docker-entrypoint-initdb.d/rename-table.sql
      - ./db/insert-table.sql:/docker-entrypoint-initdb.d/insert-table.sql
      - ./db/drop-table.sql:/docker-entrypoint-initdb.d/drop-table.sql
      - ./db/contacts.sql:/docker-entrypoint-initdb.d/contacts.sql
      - ./db/projects.sql:/docker-entrypoint-initdb.d/projects.sql
    ports:
      - "5433:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
  server:
    depends_on:
      - postgres
    image: erasche/postgrest
    ports:
      - "3000:3000"
    environment:
      DB_URI: "postgres://postgres:pwd@postgres:5433/postgres"
      DB_SCHEMA: public
      DB_ANON_ROLE: postgres
  client:
    depends_on:
      - server
    image: jsixc/node-yarn-app:7
    volumes:
      - ./:/home/app
    ports:
      - "9966:9966"
    environment:
      POSTGREST_HOST: "http://localhost:3000"
