version: '2'
services:
  # --------------------------------------------- Controller
  controller:
    container_name: controller
    build: ./dockerfiles/vnf-asterisk-controller/.
    image: dougbtv/vnf-asterisk-controller
    depends_on:
      - etcd
    links:
      - etcd
    ports:
      - "8001:8001"
    volumes:
      - "./:/vac"
    command: "/bin/bash -c 'while true; do sleep 1; done'"
  # --------------------------------------------- nginx (for front end)
  nginx:
    container_name: nginx
    # image: "docker.io/nginx:latest"
    build: ./dockerfiles/vnf-asterisk-nginx/.
    image: dougbtv/vnf-asterisk-nginx
    # depends_on: 
    #   - controller
    # volumes_from:
    #   - controller
    ports:
      - "80:80"
    # volumes: 
    #   - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
  # --------------------------------------------- etcd
  # Cheat sheet !
  # ----------------------
  # $ curl -L -X PUT http://localhost:2379/v2/keys/message -d value="sup sup"
  # {"action":"set","node":{"key":"/message","value":"sup sup","modifiedIndex":6,"createdIndex":6}}
  # $ curl -L http://localhost:2379/v2/keys/message
  # {"action":"get","node":{"key":"/message","value":"sup sup","modifiedIndex":6,"createdIndex":6}}
  etcd:
    container_name: "etcd"
    image: "quay.io/coreos/etcd"
    ports: 
      - "4001:4001"
      - "2380:2380"
      - "2379:2379"
    command: >
      etcd
      -name etcd0
      -advertise-client-urls http://172.17.0.1:2379,http://172.17.0.1:4001
      -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001
      -initial-advertise-peer-urls http://172.17.0.1:2380
      -listen-peer-urls http://0.0.0.0:2380
      -initial-cluster-token etcd-cluster-1
      -initial-cluster etcd0=http://172.17.0.1:2380
      -initial-cluster-state new
  # --------------------------------------------- Asterisk
  asterisk1:
    container_name: asterisk1
    image: "dougbtv/asterisk14"
    volumes:
      - ./docker/asterisk_entrypoint.sh:/entrypoint.sh
      - ./docker/http.conf:/etc/asterisk/http.conf
      - ./docker/ari.conf:/etc/asterisk/ari.conf
      - ./docker/rtp.conf:/etc/asterisk/rtp.conf
      - ./docker/extensions.conf:/etc/asterisk/extensions.conf
      - ./docker/pjsip.conf:/etc/asterisk/pjsip.conf
      - ./docker/modules.conf:/etc/asterisk/modules.conf
      - ./docker/empty.conf:/etc/asterisk/res_parking.conf
      - ./docker/empty.conf:/etc/asterisk/extensions.ael
      - ./docker/sounds:/var/lib/asterisk/sounds/en/
    entrypoint: "/entrypoint.sh"
    depends_on:
      - etcd
    links:
      - etcd
    ports:
      - "8088"
      - "5060/udp"
      - "10000-10010/udp"
    environment: 
      ADVERTISE_NICKNAME: "asterisk1"
      TARGET_INTERFACE: "eth0"
      ETCD_HOSTNAME: "etcd"
  asterisk2:
    container_name: asterisk2
    image: "dougbtv/asterisk14"
    volumes:
      - ./docker/asterisk_entrypoint.sh:/entrypoint.sh
      - ./docker/http.conf:/etc/asterisk/http.conf
      - ./docker/ari.conf:/etc/asterisk/ari.conf
      - ./docker/rtp.conf:/etc/asterisk/rtp.conf
      - ./docker/extensions.conf:/etc/asterisk/extensions.conf
      - ./docker/pjsip.conf:/etc/asterisk/pjsip.conf
      - ./docker/modules.conf:/etc/asterisk/modules.conf
      - ./docker/empty.conf:/etc/asterisk/res_parking.conf
      - ./docker/empty.conf:/etc/asterisk/extensions.ael
      - ./docker/sounds:/var/lib/asterisk/sounds/en/
    entrypoint: "/entrypoint.sh"
    depends_on:
      - etcd
    links:
      - etcd
    ports:
      - "8088"
      - "5060/udp"
      - "10000-10010/udp"
    environment: 
      ADVERTISE_NICKNAME: "asterisk2"
      TARGET_INTERFACE: "eth0"
      ETCD_HOSTNAME: "etcd"