# This docker-compose file provides the following setup:
# Grafana -> Protector -> InfluxDB
# This setup is useful to run tests against a real database and with a real dashboard engine
#
# Additionally we provide a set of helper scripts in a separate container
# This is useful to generate some dummy data for tests
influxdb:
  image: tutum/influxdb:0.8.8
  environment:
    PRE_CREATE_DB: "metrics"
  ports:
   - "2003"
   - "8083:8083"
   - "8086:8086"
protector:
  build: .
  # Uncomment the following three lines for interactive mode:
  # entrypoint: /bin/bash
  # stdin_open: true
  # tty: true
  ports:
   - "8888:8888"
  links:
    - influxdb:influxdb
  # To allow changes while this container is running, we do two things:
  # * Call protector as a module. This way we don't need to run setup.py every time we change the code
  # * Mount the current volume into the container
  command: python -m protector -c config.yaml --foreground --host=0.0.0.0 --backend_host=influxdb -vvv
  volumes:
    - ".:/protector"
grafana:
  image: grafana/grafana
  ports:
    - "3000:3000"
  links:
    - protector:protector
    - influxdb:influxdb
helpers:
  build: ./contrib/helpers
  volumes:
    - "./contrib/helpers:/benchmark"
  # Runs in interactive mode
  # To create some dummy data, run
  # python dummy_writer.py
  entrypoint: /bin/bash
  stdin_open: true
  tty: true
  links:
    - influxdb:influxdb
    - protector:protector