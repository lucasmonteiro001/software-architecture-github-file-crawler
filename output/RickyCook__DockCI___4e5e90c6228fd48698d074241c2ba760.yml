router:
  build: ../dockci-router
  ports:
   - 80:80
  links:
   - web:dockci
   - logserve-http:logserve
   - rabbitmq
  volumes:
   - ../dockci-router/nginx.conf:/etc/nginx/nginx.conf
web:
  build: .
  command: run --debug --collect-static --db-migrate --timeout 15 --bind 0.0.0.0:5000
  ports:
   - "5001:5000"
  links:
   - postgres
   - rabbitmq
   - redis
   - registry
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock
   - ./data:/code/data
   - ./dockci:/code/dockci
   - ./alembic:/code/alembic
   - ./tests:/code/tests
   - /Users:/Users
  environment:
    OAUTHLIB_INSECURE_TRANSPORT: 1
logserve-consumer:
  build: ../dockci-logserve
  command: run-consumer
  links:
   - rabbitmq
  volumes:
   - ../dockci-logserve/data:/code/data
   - ../dockci-logserve/dockci:/code/dockci
logserve-http:
  build: ../dockci-logserve
  command: run-http
  volumes:
   - ../dockci-logserve/data:/code/data
   - ../dockci-logserve/dockci:/code/dockci
postgres:
  image: postgres:9.4
  volumes:
    - ./data/_pgdata:/var/lib/postgresql/data/pgdata
  environment:
    POSTGRES_USER: dockci
    POSTGRES_PASSWORD: letmein
    PGDATA: /var/lib/postgresql/data/pgdata
rabbitmq:
  image: sprucedev/dockci-rabbitmq
  ports:
    - "15674:15674"  # Web STOMP
    - "5672:5672"         # AMQP
    - "15672:15672"  # Management interface
  environment:
    FRONTEND_USER: dockcife
    FRONTEND_PASSWORD: letmein
    BACKEND_USER: dockcibe
    BACKEND_PASSWORD: changeme
    KEEP_GUEST: 1
redis:
  image: redis
  ports:
    - "6379:6379"
registry:
  image: registry:2
  ports:
   - "5000:5000"
  volumes:
    - ./data/_regdata:/var/lib/registry
