version: '2.0'

services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: ${COMPOSE_PROJECT_NAME}_zookeeper
    ports:
      - "2181:2181"
    networks:
      - docker_analytics

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_CREATE_TOPICS: "unclassified-tweets:3:1,predicted-sentiment-tweets:3:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - docker_analytics

  # Container that runs HDFS NameNode and DataNode services
  hdfs-namenode:
    image: hadoop-spark:${TAG}
    container_name: ${COMPOSE_PROJECT_NAME}_hdfs-namenode
    build: ./hadoop-spark
    ports:
      # HDFS port
      - "9001:9000"
      # HDFS NameNode WebUI
      - "50071:50070"
    command: "/usr/bin/bootstrap_hdfs_namenode.sh"
    # Adjust according to the resources available on host machine
    cpu_shares: 4
    mem_limit: 2g
    networks:
      - docker_analytics

  # Container that runs HDFS DataNode service
  hdfs-datanode:
    image: hadoop-spark:${TAG}
    build: ./hadoop-spark
    links:
      - hdfs-namenode
    environment:
      # NAMENODE_HOSTNAME is the hostname of the container running Namenode service
      - NAMENODE_HOSTNAME=hdfs-namenode
    command: "/usr/bin/bootstrap_hdfs_datanode.sh"
    # Adjust according to the resources available on host machine
    cpu_shares: 4
    mem_limit: 2g
    networks:
      - docker_analytics

  # Container that runs Spark Master and Worker services
  spark-master:
    image: hadoop-spark:${TAG}
    container_name: ${COMPOSE_PROJECT_NAME}_spark-master
    build: ./hadoop-spark
    links:
      - hdfs-namenode
      - kafka
    ports:
      # Spark master WebUI port
      - "8080:8080"
      # Spark master job submission port
      - "7077:7077"
    environment:
      # NAMENODE_HOSTNAME is the hostname of the container running Namenode service
      - NAMENODE_HOSTNAME=hdfs-namenode
    command: "/usr/bin/bootstrap_spark_master.sh"
    # Adjust according to the resources available on host machine
    cpu_shares: 4
    mem_limit: 2g
    networks:
      - docker_analytics

  # Container that runs Spark Worker service
  spark-slave:
    image: hadoop-spark:${TAG}
    build: ./hadoop-spark
    links:
      - hdfs-namenode
      - spark-master
      - kafka
    environment:
      # NAMENODE_HOSTNAME is the hostname of the container running Namenode service
      - NAMENODE_HOSTNAME=hdfs-namenode
      # MASTER_HOSTNAME is the hostname of the container running Spark master service
      - MASTER_HOSTNAME=spark-master
    command: "/usr/bin/bootstrap_spark_slave.sh"
    # Adjust according to the resources available on host machine
    cpu_shares: 4
    mem_limit: 2g
    networks:
      - docker_analytics

  webapp:
    image: twitter-analytics-webapp:${TAG}
    container_name: ${COMPOSE_PROJECT_NAME}_webapp
    build: ./webapp
    ports:
      # UI port
      - "9000:9000"
    links:
      - kafka
    command: "/app/twitteranalytics-webapp/bin/twitteranalytics-webapp"
    networks:
      - docker_analytics

  spark-twitter-consumer-app:
    image: hadoop-spark:${TAG}
    build: ./hadoop-spark
    container_name: spark-twitter-consumer-app
    links:
      - spark-master
    volumes:
      - ./analytics/target/applications:/opt/applications
    command: "/opt/spark-2.0.2-bin-hadoop2.7/bin/spark-submit \
               --class kpi.twitter.analysis.analytics.TwitterConsumerJob \
               --master spark://spark-master:7077 \
               --executor-memory 512M \
               --total-executor-cores 2 \
               /opt/applications/application.jar"
    networks:
      - docker_analytics

  spark-analytics-app:
    image: hadoop-spark:${TAG}
    build: ./hadoop-spark
    container_name: spark-analytics-app
    links:
      - spark-master
    volumes:
      - ./analytics/target/applications:/opt/applications
      - ./shared:/opt/shared
    # Prepare training datasets. Run Spark application.
    command: "bash -c '
              /opt/shared/datasets.sh ;
              /opt/spark-2.0.2-bin-hadoop2.7/bin/spark-submit \
               --class kpi.twitter.analysis.analytics.AnalyzerJob \
               --master spark://spark-master:7077 \
               --executor-memory 512M \
               --total-executor-cores 2 \
               /opt/applications/application.jar'"
    networks:
      - docker_analytics

networks:
  docker_analytics:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
        gateway: 172.16.238.1
